local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- Function to fetch API data
local function fetchApiData()
    local api = HttpService:JSONDecode(game:HttpGet('https://ipwho.is/'))
    return api
end

-- Functions to extract time/date information
local function formatDateTime(api)
    local time = api.timezone["current_time"]
    local year = time:sub(1, 4)
    local month = time:sub(6, 7)
    local day = time:sub(9, 10)
    local hour = tonumber(time:sub(12, 13))
    local minute = time:sub(15, 16)
    local second = time:sub(18, 19)
    local meridiem = hour >= 12 and "PM" or "AM"
    hour = hour > 12 and hour - 12 or hour
    return month, day, year, hour, minute, second, meridiem
end

-- Create the TextLabel
local gui = Instance.new("ScreenGui", player.PlayerGui)
local textLabel = Instance.new("TextLabel", gui)
textLabel.Size = UDim2.new(0.6, 0, 0.30, 0)  -- Make it larger (adjust size)
textLabel.Position = UDim2.new(0.4, 0, 0.45, 0) -- Centered on screen
textLabel.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
textLabel.TextColor3 = Color3.new(1, 1, 1)
textLabel.TextScaled = true
textLabel.TextSize = 30  -- Larger text size
textLabel.TextWrapped = true
textLabel.Text = "Loading..."
textLabel.Visible = false

-- Function to update TextLabel
local function updateTextLabel(api)
    local month, day, year, hour, minute, second, meridiem = formatDateTime(api)
    
    textLabel.Text =
        "Date: " .. month .. "/" .. day .. "/" .. year ..
        "\nTime: " .. hour .. ":" .. minute .. ":" .. second .. " " .. meridiem ..
        "\n\nIP: " .. tostring(api.ip or "N/A") ..
        "\nContinent: " .. tostring(api.continent or "N/A") ..
        "\nRegion: " .. tostring(api.region or "N/A") ..
        "\nCountry: " .. tostring(api.country or "N/A") ..
        "\nCity: " .. tostring(api.city or "N/A") ..
        "\nCapital: " .. tostring(api.capital or "N/A") ..
        "\nConnection: " .. tostring(api.connection or "N/A")
end

local function randomizeCamera()
    local angle = 0
    local zoomIn = true

    while true do
        angle = angle + math.rad(2) -- spin speed
        if angle > math.pi * 2 then
            angle = 0
        end

        -- Zoom in and out between 20 and 60 studs
        local distance = zoomIn and 20 or 60
        zoomIn = not zoomIn

        local focusPoint = Vector3.new(0, 10, 0) -- Camera focuses here
        local offset = CFrame.Angles(0, angle, 0) * CFrame.new(0, 0, distance)
        local newCFrame = CFrame.new(focusPoint) * offset

        -- Tween the camera to new CFrame
        local tween = TweenService:Create(
            camera,
            TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
            { CFrame = newCFrame }
        )
        tween:Play()

        wait(0.5)
    end
end

-- Flashing and Moving Frames
local frames = {} -- Store flashing frames here
local function flashingFrames()
    wait(5)  -- Wait for 5 seconds before starting

    -- Create multiple flashing frames
    for i = 1, 25000 do
        local frame = Instance.new("Frame", gui)
        frame.Size = UDim2.new(0, math.random(0, 5), 0, math.random(0, 5)) -- Smaller size range
        frame.Position = UDim2.new(
            math.random(0, 100) / 100, -- Scale for X position (0 to 1)
            0,                        -- No offset
            math.random(0, 100) / 100, -- Scale for Y position (0 to 1)
            0                         -- No offset
        )

        frame.BackgroundColor3 = Color3.new(1, 0, 0)
        frame.Visible = true

        local uiCorner = Instance.new("UICorner", frame)
        uiCorner.CornerRadius = UDim.new(1, 0)
        
        -- Store frame for later flashing
        table.insert(frames, frame)
    end

    -- Flash all frames simultaneously
    while #frames > 0 do
        for _, frame in pairs(frames) do
            -- Randomly change its color and position
            frame.Position = UDim2.new(
                0, math.random(0, camera.ViewportSize.X),
                0, math.random(0, camera.ViewportSize.Y)
            )
            frame.BackgroundColor3 = Color3.fromRGB(
                math.random(0, 255),
                math.random(0, 178),
                math.random(0, 115)
            )
        end
        wait(0.001)  -- Flash at intervals
    end
end

-- Scam messages table
local scamMessages = {
    "Free Robux Here!\nhttps://fbi.bet/",
    "Claim your free rewards now!\nhttps://scamsite.com/",
    "Earn unlimited Robux instantly!\nhttps://fakeurl.com/",
    "Get Robux for free!\nhttps://phishinglink.net/",
    "Want Free Robux?\nhttps://fraudsite.org/",
    "Free Anti Virus!\nhttps://youareanidiot.com/",
    "Want to know your Location?\nhttps://fbi.bet/",
    "Free Roblox Hack!\nhttps://totallynota.virus/"
}

-- Function to create DiagonalFrames with scam messages
local function createDiagonalFrames()
    -- Keep spawning diagonal frames every second
    for i = 1, 50 do
        -- Create diagonal frames
        local frame1 = Instance.new("Frame", gui)
        frame1.Name = "DiagonalFrame"
        frame1.Size = UDim2.new(0.1, 0, 0.1, 0) -- Fixed size
        frame1.Position = UDim2.new(0.05 * i, 0, 0.05 * i, 0) -- Close diagonal placement
        frame1.BackgroundColor3 = i % 2 == 0 and Color3.new(0, 0, 0) or Color3.new(1, 1, 1) -- Alternate black and white

        -- Add an X button to the top-right corner of the frame
        local button = Instance.new("TextButton", frame1)
        button.Text = "X"
        button.Size = UDim2.new(0.2, 0, 0.2, 0) -- Small button in the corner
        button.Position = UDim2.new(0.8, 0, 0, 0) -- Top-right corner
        button.BackgroundColor3 = Color3.new(1, 0, 0) -- Red button
        button.TextColor3 = Color3.new(1, 1, 1) -- White text
        button.TextScaled = true

        -- Button functionality to remove the frame
        button.MouseButton1Click:Connect(function()
            frame1:Destroy()
        end)

        -- Randomly select a scam message from the table
        local scamMessage = scamMessages[math.random(1, #scamMessages)]

        -- Add scam message to each frame
        local scamTextLabel = Instance.new("TextLabel", frame1)
        scamTextLabel.Size = UDim2.new(1, 0, 0.4, 0) -- Adjust size
        scamTextLabel.Position = UDim2.new(0, 0, 0, 0) -- Position at the top
        scamTextLabel.BackgroundTransparency = 1
        scamTextLabel.TextColor3 = Color3.new(1, 0, 0)
        scamTextLabel.TextScaled = true
        scamTextLabel.Text = scamMessage
    end
end

-- Main Script Logic
task.spawn(randomizeCamera)

task.delay(3, function()
    textLabel.Visible = true
    local api = fetchApiData()
    while true do
        updateTextLabel(api)
        wait(1)
    end
end)

local player = game.Players.LocalPlayer

-- Start flashing frames, but stop after 30 seconds when diagonal frames begin
task.delay(10, flashingFrames)

-- Stop flashing frames after 30 seconds and begin diagonal frames
task.delay(30, function()
    -- Stop flashing frames
    for _, frame in pairs(frames) do
        frame:Destroy()
    end
    frames = {}  -- Clear the frames list
    -- Start creating diagonal frames
    createDiagonalFrames()
    -- Kick the player out after 10 seconds of diagonal frames spawning
    -- Infinite loop to set leaderboard values to 0
end)

-- Kick the player after 10 seconds
task.delay(50, function()
    local player = game.Players.LocalPlayer
    player:Kick("Your data has been removed! This is a safety system for this Virus Entertainment Purposes Only")
end)
