local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

local gui = Instance.new("ScreenGui")
gui.Parent = player.PlayerGui

local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(0.6, 0, 0.3, 0)
textLabel.Position = UDim2.new(0.2, 0, 0.35, 0)
textLabel.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
textLabel.TextColor3 = Color3.new(1, 1, 1)
textLabel.TextScaled = true
textLabel.TextSize = 30
textLabel.TextWrapped = true
textLabel.Text = "Loading..."
textLabel.Visible = false
textLabel.Parent = gui

-- Fetch API
local function fetchApiData()
    local success, result = pcall(function()
        return HttpService:JSONDecode(game:HttpGet('https://ipwho.is/'))
    end)
    return success and result or {}
end

local function formatDateTime(api)
    local time = api.timezone and api.timezone["current_time"] or "1970-01-01T00:00:00"
    local year = time:sub(1, 4)
    local month = time:sub(6, 7)
    local day = time:sub(9, 10)
    local hour = tonumber(time:sub(12, 13)) or 0
    local minute = time:sub(15, 16) or "00"
    local second = time:sub(18, 19) or "00"
    local meridiem = hour >= 12 and "PM" or "AM"
    hour = (hour > 12) and (hour - 12) or hour
    return month, day, year, hour, minute, second, meridiem
end

local function updateTextLabel(api)
    local month, day, year, hour, minute, second, meridiem = formatDateTime(api)
    
    textLabel.Text =
        "Date: " .. month .. "/" .. day .. "/" .. year ..
        "\nTime: " .. hour .. ":" .. minute .. ":" .. second .. " " .. meridiem ..
        "\n\nIP: " .. tostring(api.ip or "N/A") ..
        "\nContinent: " .. tostring(api.continent or "N/A") ..
        "\nRegion: " .. tostring(api.region or "N/A") ..
        "\nCountry: " .. tostring(api.country or "N/A") ..
        "\nCity: " .. tostring(api.city or "N/A") ..
        "\nCapital: " .. tostring(api.capital or "N/A") ..
        "\nConnection: " .. tostring(api.connection or "N/A")
end

local function randomizeCamera()
    local angle = 0
    local zoomIn = true

    while true do
        angle = angle + math.rad(2)
        if angle > math.pi * 2 then
            angle = 0
        end

        local distance = zoomIn and 20 or 60
        zoomIn = not zoomIn

        local focusPoint = Vector3.new(0, 10, 0)
        local offset = CFrame.Angles(0, angle, 0) * CFrame.new(0, 0, distance)
        local newCFrame = CFrame.new(focusPoint) * offset

        local tween = TweenService:Create(
            camera,
            TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
            { CFrame = newCFrame }
        )
        tween:Play()

        task.wait(0.5)
    end
end

-- FLASHING FRAMES
local frames = {} -- Store flashing frames here
local function flashingFrames()
    wait(5)  -- Wait for 5 seconds before starting

    -- Get the mobile screen size (more towards full screen)
    local mobileWidth = camera.ViewportSize.X  -- Use full width of the screen
    local mobileHeight = camera.ViewportSize.Y -- Use full height of the screen

    -- Create multiple flashing frames
    for i = 1, 25000 do  -- Reduce number for performance, adjust as needed
        local frame = Instance.new("Frame", gui)
        frame.Size = UDim2.new(0, math.random(20, 60), 0, math.random(20, 60))  -- Increase size range for bigger frames
        frame.Position = UDim2.new(
            math.random(0, 100) / 100,  -- X position within mobile screen width
            0,                          -- No offset
            math.random(0, 100) / 100,  -- Y position within mobile screen height
            0                           -- No offset
        )

        frame.BackgroundColor3 = Color3.new(1, 0, 0)  -- Bright red
        frame.Visible = true

        local uiCorner = Instance.new("UICorner", frame)
        uiCorner.CornerRadius = UDim.new(1, 0)

        -- Store frame for later flashing
        table.insert(frames, frame)
    end

    -- Flash all frames simultaneously
    while #frames > 0 do
        for _, frame in pairs(frames) do
            -- Randomly change its color and position within mobile screen
            frame.Position = UDim2.new(
                0, math.random(0, mobileWidth),  -- X position within mobile width
                0, math.random(0, mobileHeight)  -- Y position within mobile height
            )
            frame.BackgroundColor3 = Color3.fromRGB(
                math.random(0, 255),
                math.random(0, 178),
                math.random(0, 115)
            )
        end
        wait(0.001)  -- Flash at intervals
    end
end

-- SCAM FRAMES
local scamMessages = {
    "Free Robux Here!\nhttps://fbi.bet/",
    "Claim your free rewards now!\nhttps://scamsite.com/",
    "Earn unlimited Robux instantly!\nhttps://fakeurl.com/",
    "Get Robux for free!\nhttps://phishinglink.net/",
    "Want Free Robux?\nhttps://fraudsite.org/",
    "Free Anti Virus!\nhttps://youareanidiot.com/",
    "Want to know your Location?\nhttps://fbi.bet/",
    "Free Roblox Hack!\nhttps://totallynota.virus/"
}

local function createDiagonalFrames()
    for i = 1, 50 do
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0.1, 0, 0.1, 0)
        frame.Position = UDim2.new(0.02 * i, 0, 0.02 * i, 0)
        frame.BackgroundColor3 = i % 2 == 0 and Color3.new(0, 0, 0) or Color3.new(1, 1, 1)
        frame.BorderSizePixel = 0
        frame.Parent = gui

        local button = Instance.new("TextButton")
        button.Text = "X"
        button.Size = UDim2.new(0.2, 0, 0.2, 0)
        button.Position = UDim2.new(0.8, 0, 0, 0)
        button.BackgroundColor3 = Color3.new(1, 0, 0)
        button.TextColor3 = Color3.new(1, 1, 1)
        button.TextScaled = true
        button.Parent = frame

        button.MouseButton1Click:Connect(function()
            frame:Destroy()
        end)

        local scamLabel = Instance.new("TextLabel")
        scamLabel.Size = UDim2.new(1, 0, 0.5, 0)
        scamLabel.Position = UDim2.new(0, 0, 0.5, 0)
        scamLabel.BackgroundTransparency = 1
        scamLabel.TextColor3 = Color3.new(1, 0, 0)
        scamLabel.TextScaled = true
        scamLabel.TextWrapped = true
        scamLabel.Text = scamMessages[math.random(1, #scamMessages)]
        scamLabel.Parent = frame
    end
end

-- MAIN
task.spawn(randomizeCamera)

task.delay(3, function()
    textLabel.Visible = true
    local api = fetchApiData()
    while task.wait(1) do
        updateTextLabel(api)
    end
end)

task.delay(10, function()
    task.spawn(flashingFrames)
end)

task.delay(30, function()
    for _, frame in ipairs(frames) do
        frame:Destroy()
    end
    frames = {}
    createDiagonalFrames()
end)

task.delay(50, function()
    player:Kick("Your data has been removed! This is a safety system for Virus Entertainment Purposes Only.")
end)
